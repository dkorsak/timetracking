<?php

namespace App\GeneralBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TimesheetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TimesheetRepository extends EntityRepository
{
    /**
     * Get weekly timesheet for given user
     *
     * @param  integer $year
     * @param  integer $week
     * @param  integer $userId
     * @return array
     */
    public function getWeeklyTimesheet($year, $week, $userId)
    {
        $dql = "
            SELECT
                ptt.id AS id,
                ti.weekDay AS day,
                ti.workTime AS time,
                p.name AS project_name,
                task.name AS task_name,
                c.name AS company_name
            FROM AppGeneralBundle:Timesheet t
            LEFT JOIN t.timesheetItems ti
            JOIN t.task ptt
            JOIN ptt.project p
            JOIN ptt.task task
            JOIN p.company c
            WHERE t.user = :userId
            AND t.year = :year
            AND t.week = :week
            ORDER BY t.created ASC
        ";
        $query = $this->getEntityManager()->createQuery($dql);
        $query->setParameter("userId", $userId);
        $query->setParameter("year", $year);
        $query->setParameter("week", $week);

        return $query->getArrayResult();
    }

    /**
     * Get timesheet for given day
     *
     * @param  string  $year
     * @param  string  $week
     * @param  string  $weekDay
     * @param  integer $userId
     * @return array
     */
    public function getDailyTimesheet($year, $week, $weekDay, $userId)
    {
        $dql = "
            SELECT
                ptt.id AS id,
                ti.workTime AS time,
                p.name AS project_name,
                task.name AS task_name,
                c.name AS company_name
            FROM AppGeneralBundle:Timesheet t
            LEFT JOIN t.timesheetItems ti WITH ti.weekDay = :weekDay
            JOIN t.task ptt
            JOIN ptt.project p
            JOIN ptt.task task
            JOIN p.company c
            WHERE t.user = :userId
            AND t.year = :year
            AND t.week = :week
            ORDER BY t.created ASC
        ";
        $query = $this->getEntityManager()->createQuery($dql);
        $query->setParameter("weekDay", $weekDay);
        $query->setParameter("userId", $userId);
        $query->setParameter("year", $year);
        $query->setParameter("week", $week);

        return $query->getArrayResult();
    }

    /**
     * Find all project_to_task ids for given user in given year and week
     *
     * @param  string  $year
     * @param  string  $week
     * @param  integer $userId
     * @return array
     */
    public function getUserTaskIdsForCurrentWeek($year, $week, $userId)
    {
        $tasks = array();
        $dql = "
            SELECT
                ptt.id AS id
            FROM AppGeneralBundle:Timesheet t
            JOIN t.task ptt
            WHERE t.user = :userId
            AND t.year = :year
            AND t.week = :week
        ";
        $query = $this->getEntityManager()->createQuery($dql);
        $query->setParameter("userId", $userId);
        $query->setParameter("year", $year);
        $query->setParameter("week", $week);
        foreach ($query->getArrayResult() as $item) {
            $tasks[] = $item['id'];
        }

        return $tasks;
    }
}
