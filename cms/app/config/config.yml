imports:
    - { resource: parameters.ini }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trust_proxy_headers: false # Whether or not the Request object should trust proxy headers (X_FORWARDED_FOR/HTTP_CLIENT_IP)
    session: ~
        #handler_id: session.handler.memcached
        #handler_id: session.handler.pdo

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals: ~

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    #bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        closure:
            jar: %kernel.root_dir%/Resources/java/compiler.jar
        yui_css:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar
        yui_js:
            jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8

        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                dql: ~
                metadata_cache_driver: ~
                result_cache_driver:
                    type: memcached
                    host: %memcached_host%
                    port: %memcached_port%
                    class: Doctrine\Common\Cache\MemcachedCache
                    instance_class: Memcached
                query_cache_driver: ~
                mappings:
                    gedmo_translatable:
                        type: annotation
                        prefix: Gedmo\Translatable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity/MappedSuperclass"
                        alias: GedmoTranslatable
                        is_bundle: false
                    gedmo_loggable:
                        type: annotation
                        prefix: Gedmo\Loggable\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Loggable/Entity/MappedSuperclass"
                        alias: GedmoLoggable
                        is_bundle: false
                    gedmo_tree:
                        type: annotation
                        prefix: Gedmo\Tree\Entity
                        dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                        alias: GedmoTree
                        is_bundle: false
                filters:
                    gedmo_softdeleteable:
                        class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                        enabled: false
                auto_mapping: true

# Stof Configuration
stof_doctrine_extensions:
    default_locale: %locale%
    translation_fallback: true
    persist_default_translation: true
    uploadable:
        # Default file path: This is one of the three ways you can configure the path for the Uploadable extension
        default_file_path:       %kernel.root_dir%/../web/uploads
        # Mime type guesser class: Optional. By default, we provide an adapter for the one present in the HttpFoundation component of Symfony
        mime_type_guesser_class: Stof\DoctrineExtensionsBundle\Uploadable\MimeTypeGuesserAdapter
        # Default file info class implementing FileInfoInterface: Optional. By default we provide a class which is prepared to receive an UploadedFile instance.
        default_file_info_class: Stof\DoctrineExtensionsBundle\Uploadable\UploadedFileInfo
    orm:
        default:
            timestampable:  true
            blameable:      false
            sluggable:      true
            tree:           false
            loggable:       false
            sortable:       false
            softdeleteable: false
            uploadable:     false

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: App\GeneralBundle\Entity\User
    group:
        group_class: App\GeneralBundle\Entity\Group

    resetting:
        email:
            from_email: # Use this node only if you don't want the global email address for the resetting email
                address: noreply@timetracking.com
                sender_name: Admin
            template:   FOSUserBundle:Resetting:email.txt.twig

# Sonata Configuration
sonata_cache:
    caches:
        memcached:
            prefix:  %memcached_prefix%
            servers:
                - {host: %memcached_host%, port: %memcached_port%}
        apc:
            token:  %apc_token%   # token used to clear the related cache
            prefix: %apc_prefix%  # prefix to ensure there is no clash between instances
            servers:
                - { domain: %apc_domain%, ip: %apc_ip%, port: 80}

sonata_admin:
    #security:
    #    handler: sonata.admin.security.handler.role

    title:      Timetracking Administration Area
    title_logo: /bundles/appbackend/images/cms.gif
    templates:
        # default global templates
        layout:    AppBackendBundle::standard_layout.html.twig
        ajax:      SonataAdminBundle::ajax_layout.html.twig
        dashboard: SonataAdminBundle:Core:dashboard.html.twig

        # default actions templates, should extend a global templates
        list:    AppBackendBundle:CRUD:list.html.twig
        show:    AppBackendBundle:CRUD:show.html.twig
        edit:    AppBackendBundle:CRUD:edit.html.twig
        delete:  AppBackendBundle:CRUD:delete.html.twig

    dashboard:
        blocks:
            # display a dashboard blocks
            - { position: left, type: app_backend.block.apc_block }
            - { position: right, type: app_backend.block.memcached_block }

sonata_doctrine_orm_admin:
    # default value is null, so doctrine uses the value defined in the configuration
    entity_manager: ~

    templates:
        form:
            - SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig
        filter:
            - SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig
        types:
            list:
                array:      SonataAdminBundle:CRUD:list_array.html.twig
                boolean:    SonataAdminBundle:CRUD:list_boolean.html.twig
                date:       SonataAdminBundle:CRUD:list_date.html.twig
                time:       SonataAdminBundle:CRUD:list_time.html.twig
                datetime:   SonataAdminBundle:CRUD:list_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_list_field.html.twig
                trans:      SonataAdminBundle:CRUD:list_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_list_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_list_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_list_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_list_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_list_field.html.twig
                identifier: SonataAdminBundle:CRUD:base_list_field.html.twig

            show:
                array:      SonataAdminBundle:CRUD:show_array.html.twig
                boolean:    SonataAdminBundle:CRUD:show_boolean.html.twig
                date:       SonataAdminBundle:CRUD:show_date.html.twig
                time:       SonataAdminBundle:CRUD:show_time.html.twig
                datetime:   SonataAdminBundle:CRUD:show_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_show_field.html.twig
                trans:      SonataAdminBundle:CRUD:show_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_show_field.html.twig

# Sonata block configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        app_backend.block.apc_block:
            cache: sonata.cache.memcached
            settings: {ttl: 60}
        app_backend.block.memcached_block:
            cache: sonata.cache.memcached
            settings: {ttl: 60}

sonata_user:
    security_acl:     false
    class:
        user:         App\GeneralBundle\Entity\User
        group:        App\GeneralBundle\Entity\Group

    profile:
        form:
            type:               app_backend_form_profile_profile_type
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile, Default]

# Default SEO settings for frontend website
sonata_seo:
    default:          sonata.seo.page.default #service
    encoding:         UTF-8
    page:
        title:            Timetracking
        metas:
            name:
                keywords:             ""
                description:          ""
                robots:               index, follow
                viewport:             width=device-width, initial-scale=1.0

            #property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2
                #'og:site_name':       Sonata Project Sandbox
                #'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                'X-Ua-Compatible':      IE=edge,chrome=1

        head:
            'lang':     'en'
            #'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"

# Genmenu form configuration
genemu_form:
    date: ~

parameters:
    # symfony pdo session database params
    pdo.db_options:
        db_table:    session
        db_id_col:   session_id
        db_data_col: session_value
        db_time_col: session_time

services:
    # store symfony session in memcached
    session.memcached:
        class: Memcached
        calls:
          - [ addServer, [ %memcached_host%, %memcached_port% ]]

    session.handler.memcached:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: [ @session.memcached, { prefix: %memcached_session_prefix%, expiretime: %memcached_session_expire% } ]

    # store symfony session in PDO
    pdo:
        class: PDO
        arguments:
          - "mysql:dbname=%database_name%;host=%database_host%;port=%database_port%"
          - %database_user%
          - %database_password%

    session.handler.pdo:
        class:     Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler
        arguments: [@pdo, %pdo.db_options%]
